var a = 1
if a.c[3] == 42 {
	foo = 2
} else if b<=7 {
    foo = 3
} else {
	foo = 4
}
for a in b {
    if a {
      continue
    }
    {
	  form = ((a+b)*c.d--e/f)
    }
    break
}
str = "hello {name}!"
str = this.b?.c
end
# comment
lst = [1, "two", true, nil, b+c*d, dict(x: 42)]
mip = dict (a:1, b:"two", c:[3,3,3])

var foo = function() {
  return 42
}
var foo = function(a, b, c:77) {
  return 42
}

function foo(a: 1*2) {
   return 42
}

foo("22", c:"ccc")
a.foo("22", c:"ccc")
---
(decl
  (id a)
  1
)
(if
  (conditional
    (==
      (index
        (property
          (id a)
          (id c)
        )
        3
      )
      42
    )
    (block
      (assign
        (id foo)
        2
      )
    )
  )
  (conditional
    (<=
      (id b)
      7
    )
    (block
      (assign
        (id foo)
        3
      )
    )
  )
  (block
    (assign
      (id foo)
      4
    )
  )
)
(for
  (id a)
  -
  (id b)
  (block
    (if
      (conditional
        (id a)
        (block
          continue
        )
      )
    )
    (block
      (assign
        (id form)
        (-
          (*
            (+
              (id a)
              (id b)
            )
            (property
              (id c)
              (id d)
            )
          )
          (/
            (neg
              (id e)
            )
            (id f)
          )
        )
      )
    )
    break
  )
)
(assign
  (id str)
  (interpolate
    "hello "
    (id name)
    "!"
  )
)
(assign
  (id str)
  (property
    (?
      (property
        this
        (id b)
      )
    )
    (id c)
  )
)
end
(assign
  (id lst)
  (list
    1
    "two"
    true
    nil
    (+
      (id b)
      (*
        (id c)
        (id d)
      )
    )
    (dict
      (kv
        (id x)
        42
      )
    )
  )
)
(assign
  (id mip)
  (dict
    (kv
      (id a)
      1
    )
    (kv
      (id b)
      "two"
    )
    (kv
      (id c)
      (list
        3
        3
        3
      )
    )
  )
)
(decl
  (id foo)
  (fn
    (block
      (return
        42
      )
    )
  )
)
(decl
  (id foo)
  (fn
    (params
      a
      b
      (c
        77
      )
    )
    (block
      (return
        42
      )
    )
  )
)
(fn
  (name foo)
  (params
    (a
      (*
        1
        2
      )
    )
  )
  (block
    (return
      42
    )
  )
)
(call
  (on
    (id foo)
  )
  (args
    "22"
    (c
      "ccc"
    )
  )
)
(call
  (on
    (property
      (id a)
      (id foo)
    )
  )
  (args
    "22"
    (c
      "ccc"
    )
  )
)
